<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <!-- $(RepoRoot) is normally set globally and Arcade overrides it to ensure a trailing slash. -->
    <RepoRoot Condition=" '$(RepoRoot)' == '' OR !HasTrailingSlash('$(RepoRoot)') ">$(MSBuildThisFileDirectory)</RepoRoot>

    <RepositoryUrl>https://github.com/dotnet/razor-compiler</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>

  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisMode>Default</AnalysisMode>
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <!-- Disable XLIFF tasks -->
    <UsingToolXliff>false</UsingToolXliff>
  </PropertyGroup>

  <!--
    We don't follow Arcade conventions for project naming.
  -->
  <PropertyGroup Condition="'$(IsUnitTestProject)' == ''">
    <IsUnitTestProject>false</IsUnitTestProject>
    <IsUnitTestProject Condition="$(MSBuildProjectName.EndsWith('.Test'))">true</IsUnitTestProject>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />
  <Import Project="eng\MPack.props" />
  <Import Project="eng\targets\Npm.Common.props"  Condition="'$(MSBuildProjectExtension)' == '.npmproj'" />

  <Import
    Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), AspNetCoreSettings.props))\AspNetCoreSettings.props"
    Condition=" '$(CI)' != 'true' AND '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), AspNetCoreSettings.props))' != '' " />

  <PropertyGroup Label="Build Settings">
    <LangVersion>preview</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <StrongNameKeyId>MicrosoftAspNetCore</StrongNameKeyId>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GenerateResxSource>true</GenerateResxSource>
    <GenerateResxSourceEmitFormatMethods>true</GenerateResxSourceEmitFormatMethods>
    <ExcludeFromSourceBuild Condition="'$(IsUnitTestProject)' == 'true'">true</ExcludeFromSourceBuild>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>

    <SharedSourceRoot>$(MSBuildThisFileDirectory)src\Shared\</SharedSourceRoot>

    <!-- Embed source files that are not tracked by the source control manager in the PDB. -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Working around https://github.com/dotnet/sdk/issues/24747 -->
    <NoWarn>$(NoWarn);NU1505</NoWarn>

    <!-- Working around https://github.com/microsoft/msbuild/pull/4764 -->
    <EmbeddedResourceUseDependentUponConvention>false</EmbeddedResourceUseDependentUponConvention>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="$(Tooling_MicrosoftCodeAnalysisAnalyzersPackageVersion)" NoWarn="NU1608" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="$(Tooling_MicrosoftCodeAnalysisNetAnalyzersPackageVersion)" NoWarn="NU1608" />
    <PackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" Version="$(Tooling_MicrosoftCodeAnalysisBannedApiAnalyzersPackageVersion)" />
    <PackageReference Include="Roslyn.Diagnostics.Analyzers" Version="$(Tooling_RoslynDiagnosticsAnalyzersPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)eng\BannedSymbols.txt" />
  </ItemGroup>

  <PropertyGroup Label="Package and Assembly Metadata">
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Product>Microsoft ASP.NET Core</Product>
  </PropertyGroup>

  <PropertyGroup Label="Warning Suppressions">
    <!--
      Suppress warnings about assembly conflicts. This happens for assemblies that ship in VS so it's irrelevant.
    -->
    <NoWarn>$(NoWarn);MSB3277</NoWarn>

    <!-- Ensure API docs are available. -->
    <NoWarn>$(NoWarn.Replace('1591', ''))</NoWarn>
    <NoWarn Condition=" '$(BuildingInsideVisualStudio)' == 'true' ">$(NoWarn);0105</NoWarn>

    <!-- For local builds, don't make missing XML docs a fatal build error, but still surface so we have visibility into undocumented APIs. -->
    <WarningsNotAsErrors Condition=" '$(ContinuousIntegrationBuild)' != 'true' ">$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>

    <!-- xUnit1004 = warns about skipped tests. Make this a non-fatal build warning. -->
    <WarningsNotAsErrors>$(WarningsNotAsErrors);xUnit1004</WarningsNotAsErrors>
  </PropertyGroup>
</Project>
